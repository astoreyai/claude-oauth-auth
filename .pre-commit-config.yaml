# Pre-commit hooks configuration
# https://pre-commit.com

# To install: pre-commit install
# To run manually: pre-commit run --all-files
# To update hooks: pre-commit autoupdate

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
        args: [--safe]
      - id: check-toml
        name: Check TOML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-added-large-files
        name: Check for large files
        args: [--maxkb=1000]
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Check line endings
        args: [--fix=lf]
      - id: detect-private-key
        name: Detect private keys

  # Python-specific checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-ast
        name: Check Python AST
      - id: check-builtin-literals
        name: Check builtin literals
      - id: check-docstring-first
        name: Check docstring first
      - id: debug-statements
        name: Check for debug statements
      - id: name-tests-test
        name: Check test naming
        args: [--pytest-test-first]
        exclude: ^tests/fixtures/

  # Ruff - Fast Python linter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.15
    hooks:
      - id: ruff
        name: Run ruff linter
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: Run ruff formatter

  # MyPy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: Run mypy type checker
        args: [--config-file=pyproject.toml]
        additional_dependencies:
          - types-all
        exclude: ^tests/

  # Bandit - Security linter
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        name: Run bandit security checks
        args: [-c, .bandit, -r, src/]
        exclude: ^tests/

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        name: Lint markdown files
        args: [--fix]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [-c=.yamllint.yml]

  # Shellcheck - Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        name: Check shell scripts

  # Check Python dependencies for security issues
  - repo: local
    hooks:
      - id: pip-audit
        name: Audit Python dependencies
        entry: bash -c 'pip-audit --desc || true'
        language: system
        pass_filenames: false
        stages: [manual]  # Only run manually with --hook-stage manual

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pip-audit]  # Skip slow checks in CI
  submodules: false
