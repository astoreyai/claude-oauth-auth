[tox]
envlist = py38,py39,py310,py311,py312,lint,type,coverage,docs
isolated_build = True
skip_missing_interpreters = True

[testenv]
description = Run unit tests with pytest
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
commands =
    pytest {posargs:tests/}

[testenv:py38]
description = Run tests on Python 3.8
basepython = python3.8

[testenv:py39]
description = Run tests on Python 3.9
basepython = python3.9

[testenv:py310]
description = Run tests on Python 3.10
basepython = python3.10

[testenv:py311]
description = Run tests on Python 3.11
basepython = python3.11

[testenv:py312]
description = Run tests on Python 3.12
basepython = python3.12

[testenv:lint]
description = Run linting with ruff
deps =
    ruff>=0.1.0
commands =
    ruff check src tests
    ruff format --check src tests

[testenv:lint-fix]
description = Auto-fix linting issues with ruff
deps =
    ruff>=0.1.0
commands =
    ruff check --fix src tests
    ruff format src tests

[testenv:type]
description = Run type checking with mypy
deps =
    mypy>=1.0.0
    types-setuptools
commands =
    mypy src

[testenv:coverage]
description = Run tests with coverage report
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
commands =
    pytest --cov=claude_oauth_auth --cov-report=html --cov-report=term-missing --cov-fail-under=95 {posargs:tests/}

[testenv:coverage-xml]
description = Run tests with XML coverage report (for CI)
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
commands =
    pytest --cov=claude_oauth_auth --cov-report=xml --cov-report=term {posargs:tests/}

[testenv:docs]
description = Build documentation with mkdocs
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.24.0
commands =
    mkdocs build --clean --strict

[testenv:docs-serve]
description = Serve documentation locally
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.24.0
commands =
    mkdocs serve

[testenv:test-all]
description = Run all test environments
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    ruff>=0.1.0
    mypy>=1.0.0
commands =
    pytest tests/ -v
    ruff check src tests
    mypy src

[testenv:dev]
description = Development environment with all dependencies
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    ruff>=0.1.0
    mypy>=1.0.0
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.24.0
    ipython
commands =
    python -c "print('Development environment ready!')"

[testenv:integration]
description = Run integration tests only
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
commands =
    pytest -v -m integration {posargs:tests/}

[testenv:unit]
description = Run unit tests only (exclude integration)
deps =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
commands =
    pytest -v -m "not integration" {posargs:tests/}

# pytest configuration
[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    real: marks tests as requiring real API credentials
