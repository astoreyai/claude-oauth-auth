name: Community Management

on:
  issues:
    types: [opened, labeled]
  pull_request_target:
    types: [opened, labeled, ready_for_review]
  schedule:
    # Run stale check daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

jobs:
  welcome:
    name: Welcome First-Time Contributors
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'pull_request_target'
    steps:
      - name: Welcome new contributors
        uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          issue-message: |
            ðŸ‘‹ Welcome to claude-oauth-auth, @${{ github.actor }}!

            Thank you for opening your first issue! We appreciate you taking the time to contribute to the project.

            A maintainer will review your issue and respond as soon as possible. In the meantime:
            - Make sure you've provided all the requested information
            - Check out our [Contributing Guide](.github/CONTRIBUTING.md)
            - Join our [Discussions](https://github.com/astoreyai/claude-oauth-auth/discussions) if you have questions

            We're glad to have you here! ðŸŽ‰
          pr-message: |
            ðŸ‘‹ Welcome to claude-oauth-auth, @${{ github.actor }}!

            Thank you for opening your first pull request! We're excited to review your contribution.

            Please ensure that:
            - [ ] All tests pass (`pytest`)
            - [ ] Code is formatted (`ruff format src tests`)
            - [ ] Type checking passes (`mypy src`)
            - [ ] Test coverage is maintained at 95%+
            - [ ] Documentation is updated (if needed)

            A maintainer will review your PR soon. Check out our [Contributing Guide](.github/CONTRIBUTING.md) for more details.

            Thank you for contributing! ðŸš€

  label-pr:
    name: Auto-label Pull Requests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'opened'
    steps:
      - name: Label based on changed files
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true

  label-issues:
    name: Auto-label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Add needs-triage label
        uses: actions/github-script@v7
        with:
          script: |
            // needs-triage is already added by the issue template
            // This job can be used for additional automatic labeling logic

            const issue = context.payload.issue;
            const body = issue.body || '';

            // Add labels based on issue content
            const labels = [];

            // Check for version-specific issues
            if (body.includes('0.1.0')) {
              labels.push('v0.1.x');
            }

            // Check for platform-specific issues
            if (body.toLowerCase().includes('windows')) {
              labels.push('platform:windows');
            } else if (body.toLowerCase().includes('macos') || body.toLowerCase().includes('mac os')) {
              labels.push('platform:macos');
            } else if (body.toLowerCase().includes('linux') || body.toLowerCase().includes('ubuntu')) {
              labels.push('platform:linux');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

  stale:
    name: Mark and Close Stale Items
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Stale issue and PR handler
        uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

          # Issue settings
          stale-issue-message: |
            This issue has been automatically marked as stale because it has not had recent activity.

            It will be closed in 7 days if no further activity occurs. Thank you for your contributions!

            If you believe this issue is still relevant, please:
            - Comment on this issue to keep it open
            - Add the `keep-open` label
            - Provide additional context or updates
          close-issue-message: |
            This issue has been automatically closed due to inactivity.

            If you believe this is still relevant, please feel free to reopen it or create a new issue with updated information.
          stale-issue-label: 'stale'
          exempt-issue-labels: 'pinned,security,keep-open,in-progress'
          days-before-issue-stale: 60
          days-before-issue-close: 7

          # PR settings
          stale-pr-message: |
            This pull request has been automatically marked as stale because it has not had recent activity.

            It will be closed in 14 days if no further activity occurs. Thank you for your contribution!

            If you're still working on this, please:
            - Push new commits to keep it active
            - Comment to provide status updates
            - Add the `keep-open` label
          close-pr-message: |
            This pull request has been automatically closed due to inactivity.

            If you'd like to continue this work, please feel free to reopen or create a new PR.
          stale-pr-label: 'stale'
          exempt-pr-labels: 'pinned,security,keep-open,in-review'
          days-before-pr-stale: 45
          days-before-pr-close: 14

          # General settings
          operations-per-run: 100
          remove-stale-when-updated: true
          ascending: true

  assign-reviewers:
    name: Auto-assign Reviewers
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_target' &&
      github.event.action == 'ready_for_review' &&
      !github.event.pull_request.draft
    steps:
      - name: Assign reviewers
        uses: actions/github-script@v7
        with:
          script: |
            // Auto-assign reviewers for non-draft PRs
            // You can customize this logic based on your team structure

            const pr = context.payload.pull_request;

            // Don't auto-assign if reviewers already exist
            if (pr.requested_reviewers && pr.requested_reviewers.length > 0) {
              console.log('Reviewers already assigned');
              return;
            }

            // Add logic here to assign specific reviewers based on:
            // - Changed files
            // - PR labels
            // - Team members

            console.log('Auto-assign logic can be customized here');

  link-checker:
    name: Check for Broken Links in Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Check links in issue body
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body || '';

            // Extract URLs from the issue body
            const urlRegex = /(https?:\/\/[^\s)]+)/g;
            const urls = body.match(urlRegex) || [];

            if (urls.length > 0) {
              console.log(`Found ${urls.length} URLs in issue #${issue.number}`);
              // You can add link validation logic here
            }

  triage-assistant:
    name: Triage Assistant
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'labeled'
    steps:
      - name: Move to project board
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const label = context.payload.label;

            // When specific labels are added, you can:
            // - Move issues to project boards
            // - Add automated comments
            // - Trigger notifications

            if (label.name === 'bug' && issue.labels.some(l => l.name === 'needs-triage')) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: 'Thank you for reporting this bug! A maintainer will investigate and update the priority accordingly.'
              });
            }

            if (label.name === 'good first issue') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: 'This issue has been marked as a good first issue! We welcome contributions from new contributors. Check out our [Contributing Guide](.github/CONTRIBUTING.md) to get started.'
              });
            }
