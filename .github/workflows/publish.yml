name: Publish to PyPI

# Trigger on version tags (v0.1.0, v1.0.0, etc.)
on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    # Use environment for extra protection (optional but recommended)
    environment:
      name: release
      url: https://pypi.org/project/claude-oauth-auth/

    permissions:
      id-token: write  # IMPORTANT: Required for trusted publishing
      contents: write  # Required for creating GitHub release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "Version: $TAG"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Verify version matches tag
        run: |
          VERSION_IN_FILE=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          TAG_VERSION="${{ steps.version.outputs.version }}"
          echo "Version in pyproject.toml: $VERSION_IN_FILE"
          echo "Version from tag: $TAG_VERSION"
          if [ "$VERSION_IN_FILE" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "pyproject.toml has version $VERSION_IN_FILE but tag is v$TAG_VERSION"
            exit 1
          fi
          echo "✅ Version matches tag!"

      - name: Run tests
        run: |
          pip install -e ".[dev]"
          pytest --cov=claude_oauth_auth --cov-fail-under=95
          echo "✅ All tests passed!"

      - name: Run linting
        run: |
          ruff check src tests
          echo "✅ Linting passed!"

      - name: Run type checking
        run: |
          mypy src
          echo "✅ Type checking passed!"

      - name: Build distribution
        run: |
          python -m build
          echo "📦 Built packages:"
          ls -lh dist/

      - name: Check distribution
        run: |
          python -m twine check dist/*
          echo "✅ Distribution check passed!"

      - name: Show distribution contents
        run: |
          echo "📋 Wheel contents:"
          python -m zipfile -l dist/*.whl | head -30
          echo ""
          echo "📋 Source distribution contents:"
          tar -tzf dist/*.tar.gz | head -30

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

      - name: Wait for package to be available
        run: |
          echo "⏳ Waiting 60 seconds for package to be available on PyPI..."
          sleep 60

      - name: Verify PyPI publication
        run: |
          echo "🔍 Verifying package on PyPI..."
          pip install --upgrade claude-oauth-auth==${{ steps.version.outputs.version }}
          python -c "import claude_oauth_auth; print(f'✅ Installed version: {claude_oauth_auth.__version__}')"

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Extract changelog section for this version
          awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '$d' > release_notes.md
          cat release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}
          generate_release_notes: true

      - name: Success summary
        if: success()
        run: |
          echo "## 🎉 Release Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**PyPI**: https://pypi.org/project/claude-oauth-auth/${{ steps.version.outputs.version }}/" >> $GITHUB_STEP_SUMMARY
          echo "**GitHub Release**: ${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "pip install claude-oauth-auth==${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Verify package on PyPI" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Test installation" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Announce release" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Update documentation site" >> $GITHUB_STEP_SUMMARY

      - name: Failure summary
        if: failure()
        run: |
          echo "## ❌ Release Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Common issues:" >> $GITHUB_STEP_SUMMARY
          echo "- Tests failed" >> $GITHUB_STEP_SUMMARY
          echo "- Version mismatch between tag and pyproject.toml" >> $GITHUB_STEP_SUMMARY
          echo "- Trusted publishing not configured on PyPI" >> $GITHUB_STEP_SUMMARY
          echo "- Version already exists on PyPI (cannot re-upload)" >> $GITHUB_STEP_SUMMARY
